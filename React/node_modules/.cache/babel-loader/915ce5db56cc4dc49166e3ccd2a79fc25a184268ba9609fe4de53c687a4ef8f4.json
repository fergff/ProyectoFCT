{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Equipo\\\\Desktop\\\\DI\\\\react\\\\pruebaesp32\\\\React\\\\src\\\\screens\\\\RegisterScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ref, set, get, query, orderByChild, equalTo } from 'firebase/database';\nimport { database } from '../conexion/firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterScreen() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleRegister = async () => {\n    if (!email || !name || !password || !confirmPassword) {\n      setError('Por favor, rellena todos los campos.');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError('Las contraseñas no coinciden');\n      return;\n    }\n\n    // Verifica si el nombre de usuario ya existe\n    const usersRef = ref(database, 'usuarios/');\n    const usersQuery = query(usersRef, orderByChild('name'), equalTo(name));\n    const snapshot = await get(usersQuery);\n    if (snapshot.exists()) {\n      setError('El nombre de usuario ya está en uso. Elige otro nombre.');\n      return;\n    }\n\n    // Si el nombre de usuario no existe, procede a crear el nuevo usuario\n    const newUserRef = ref(database, `usuarios/${Date.now()}`); // Use Date.now() para un ID simple\n    set(newUserRef, {\n      email: email,\n      name: name,\n      password: password\n    }).then(() => {\n      setError('');\n      navigate('/home'); // Navegar a la página principal después del registro\n    }).catch(error => {\n      setError('Error al crear el usuario: ' + error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      placeholder: \"Confirmar Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterScreen, \"u4qSCBfCUD0OsbsMXx5ZIwmuYS8=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterScreen;\nexport default RegisterScreen;\nvar _c;\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"names":["React","useState","useNavigate","ref","set","get","query","orderByChild","equalTo","database","jsxDEV","_jsxDEV","RegisterScreen","_s","email","setEmail","name","setName","password","setPassword","confirmPassword","setConfirmPassword","error","setError","navigate","handleRegister","usersRef","usersQuery","snapshot","exists","newUserRef","Date","now","then","catch","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Equipo/Desktop/DI/react/pruebaesp32/React/src/screens/RegisterScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ref, set, get, query, orderByChild, equalTo } from 'firebase/database';\r\nimport { database } from '../conexion/firebaseConfig';\r\n\r\nfunction RegisterScreen() {\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async () => {\r\n    if (!email || !name || !password || !confirmPassword) {\r\n      setError('Por favor, rellena todos los campos.');\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setError('Las contraseñas no coinciden');\r\n      return;\r\n    }\r\n\r\n    // Verifica si el nombre de usuario ya existe\r\n    const usersRef = ref(database, 'usuarios/');\r\n    const usersQuery = query(usersRef, orderByChild('name'), equalTo(name));\r\n    const snapshot = await get(usersQuery);\r\n    if (snapshot.exists()) {\r\n      setError('El nombre de usuario ya está en uso. Elige otro nombre.');\r\n      return;\r\n    }\r\n\r\n    // Si el nombre de usuario no existe, procede a crear el nuevo usuario\r\n    const newUserRef = ref(database, `usuarios/${Date.now()}`); // Use Date.now() para un ID simple\r\n    set(newUserRef, {\r\n      email: email,\r\n      name: name,\r\n      password: password,\r\n    }).then(() => {\r\n      setError('');\r\n      navigate('/home'); // Navegar a la página principal después del registro\r\n    }).catch((error) => {\r\n      setError('Error al crear el usuario: ' + error.message);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Registrarse</h2>\r\n      {error && <div style={{ color: 'red' }}>{error}</div>}\r\n      <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" />\r\n      <input type=\"text\" value={name} onChange={e => setName(e.target.value)} placeholder=\"Nombre\" />\r\n      <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Contraseña\" />\r\n      <input type=\"password\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} placeholder=\"Confirmar Contraseña\" />\r\n      <button onClick={handleRegister}>Registrarse</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}