{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Equipo\\\\Desktop\\\\DI\\\\react\\\\pruebaesp32\\\\React\\\\src\\\\screens\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ref, onValue, getDatabase } from 'firebase/database';\nimport Modal from 'react-modal';\nimport './styles.css'; // Asumiendo que los estilos están en este archivo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root'); // Necesario para accesibilidad en react-modal\n\nfunction HomeScreen() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [userId, setUserId] = useState('');\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  useEffect(() => {\n    const fetchUserId = async () => {\n      try {\n        const storedUserId = localStorage.getItem('userId');\n        if (storedUserId) {\n          setUserId(storedUserId);\n          const devicesRef = ref(getDatabase(), `usuarios/${storedUserId}/devices`);\n          onValue(devicesRef, snapshot => {\n            const devicesData = snapshot.val();\n            const devicesList = devicesData ? Object.keys(devicesData).map(key => ({\n              id: key,\n              ...devicesData[key]\n            })) : [];\n            setDevices(devicesList);\n          });\n        }\n      } catch (error) {\n        console.log(\"Error retrieving userId\", error);\n      }\n    };\n    fetchUserId();\n  }, []);\n  const handlePressDevice = device => {\n    setSelectedDevice(device);\n    setModalVisible(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deviceGrid\",\n      children: devices.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        onClick: () => handlePressDevice(item),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/path/to/your/image.png\" // Asegúrate de tener una imagen válida\n          ,\n          className: \"icon\",\n          alt: \"Device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardTitle\",\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalVisible,\n      onRequestClose: () => setModalVisible(false),\n      contentLabel: \"Device Details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Device Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: selectedDevice && selectedDevice.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalVisible(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(HomeScreen, \"h0uu3HBqDInaBZ8vWdjToJPMtys=\");\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useEffect","ref","onValue","getDatabase","Modal","jsxDEV","_jsxDEV","setAppElement","HomeScreen","_s","devices","setDevices","userId","setUserId","modalVisible","setModalVisible","selectedDevice","setSelectedDevice","fetchUserId","storedUserId","localStorage","getItem","devicesRef","snapshot","devicesData","val","devicesList","Object","keys","map","key","id","error","console","log","handlePressDevice","device","className","children","fileName","_jsxFileName","lineNumber","columnNumber","item","onClick","src","alt","isOpen","onRequestClose","contentLabel","_c","$RefreshReg$"],"sources":["C:/Users/Equipo/Desktop/DI/react/pruebaesp32/React/src/screens/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ref, onValue, getDatabase } from 'firebase/database';\r\nimport Modal from 'react-modal';\r\nimport './styles.css'; // Asumiendo que los estilos están en este archivo\r\n\r\nModal.setAppElement('#root'); // Necesario para accesibilidad en react-modal\r\n\r\nfunction HomeScreen() {\r\n  const [devices, setDevices] = useState([]);\r\n  const [userId, setUserId] = useState('');\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [selectedDevice, setSelectedDevice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserId = async () => {\r\n      try {\r\n        const storedUserId = localStorage.getItem('userId');\r\n        if (storedUserId) {\r\n          setUserId(storedUserId);\r\n          const devicesRef = ref(getDatabase(), `usuarios/${storedUserId}/devices`);\r\n          onValue(devicesRef, (snapshot) => {\r\n            const devicesData = snapshot.val();\r\n            const devicesList = devicesData ? Object.keys(devicesData).map(key => ({\r\n              id: key,\r\n              ...devicesData[key]\r\n            })) : [];\r\n            setDevices(devicesList);\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error retrieving userId\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserId();\r\n  }, []);\r\n\r\n  const handlePressDevice = (device) => {\r\n    setSelectedDevice(device);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sContainer\">\r\n      <h1>Dispositivos</h1>\r\n      <div className=\"deviceGrid\">\r\n        {devices.map((item) => (\r\n          <div className=\"card\" key={item.id} onClick={() => handlePressDevice(item)}>\r\n            <img\r\n              src=\"/path/to/your/image.png\" // Asegúrate de tener una imagen válida\r\n              className=\"icon\"\r\n              alt=\"Device\"\r\n            />\r\n            <div className=\"cardTitle\">{item.id}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Modal\r\n        isOpen={modalVisible}\r\n        onRequestClose={() => setModalVisible(false)}\r\n        contentLabel=\"Device Details\"\r\n      >\r\n        <h2>Device Information</h2>\r\n        <div>{selectedDevice && selectedDevice.id}</div>\r\n        <button onClick={() => setModalVisible(false)}>Close</button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}