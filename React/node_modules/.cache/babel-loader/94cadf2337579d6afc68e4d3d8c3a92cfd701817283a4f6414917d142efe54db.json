{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Equipo\\\\Desktop\\\\DI\\\\react\\\\pruebaesp32\\\\plant4all\\\\src\\\\screens\\\\RegisterScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterScreen() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const history = useHistory();\n  const handleRegister = async () => {\n    if (password !== confirmPassword) {\n      alert('Las contraseñas no coinciden');\n      return;\n    }\n    // Aquí implementarías el registro con Firebase\n    console.log('Registrando usuario:', name);\n    // Simulando registro exitoso:\n    history.push('/home'); // Redirige a Home después de registrar\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\",\n      className: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Nombre\",\n      className: \"form-control mt-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Contrase\\xF1a\",\n      className: \"form-control mt-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      placeholder: \"Confirmar Contrase\\xF1a\",\n      className: \"form-control mt-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      className: \"btn btn-primary mt-3\",\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterScreen, \"qiZ3lBzPC8Qx3S8rgJVerNzCVuY=\", false, function () {\n  return [useHistory];\n});\n_c = RegisterScreen;\nexport default RegisterScreen;\nvar _c;\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","RegisterScreen","_s","email","setEmail","name","setName","password","setPassword","confirmPassword","setConfirmPassword","history","handleRegister","alert","console","log","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Equipo/Desktop/DI/react/pruebaesp32/plant4all/src/screens/RegisterScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction RegisterScreen() {\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleRegister = async () => {\r\n    if (password !== confirmPassword) {\r\n      alert('Las contraseñas no coinciden');\r\n      return;\r\n    }\r\n    // Aquí implementarías el registro con Firebase\r\n    console.log('Registrando usuario:', name);\r\n    // Simulando registro exitoso:\r\n    history.push('/home'); // Redirige a Home después de registrar\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Registrarse</h2>\r\n      <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" className=\"form-control\" />\r\n      <input type=\"text\" value={name} onChange={e => setName(e.target.value)} placeholder=\"Nombre\" className=\"form-control mt-3\" />\r\n      <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Contraseña\" className=\"form-control mt-3\" />\r\n      <input type=\"password\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} placeholder=\"Confirmar Contraseña\" className=\"form-control mt-3\" />\r\n      <button onClick={handleRegister} className=\"btn btn-primary mt-3\">Registrarse</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}