{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Equipo\\\\Desktop\\\\DI\\\\react\\\\pruebaesp32\\\\React\\\\src\\\\screens\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { ref, onValue, getDatabase, update, get } from 'firebase/database';\nimport { useNavigate } from 'react-router-dom';\nimport DeviceModal from './DeviceModal';\nimport ChangePasswordModal from './ChangePasswordModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomeScreen() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [userName, setUserName] = useState('');\n  const [userId, setUserId] = useState('');\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [ledState, setLedState] = useState(false);\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  const [changePasswordModalVisible, setChangePasswordModalVisible] = useState(false);\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const modalContentRef = useRef(null);\n  const dropdownRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserId = async () => {\n      const storedUserId = localStorage.getItem('userId');\n      if (storedUserId) {\n        setUserId(storedUserId);\n        const database = getDatabase();\n        const userRef = ref(database, `usuarios/${storedUserId}`);\n        const devicesRef = ref(database, `usuarios/${storedUserId}/devices`);\n        onValue(userRef, snapshot => {\n          const userData = snapshot.val();\n          setUserName(userData ? userData.name : '');\n        });\n        onValue(devicesRef, snapshot => {\n          const devicesData = snapshot.val();\n          const devicesList = devicesData ? Object.keys(devicesData).map(key => ({\n            id: key,\n            ...devicesData[key]\n          })) : [];\n\n          // Filtra los dispositivos con connected: true\n          const connectedDevices = devicesList.filter(device => device.connected);\n          setDevices(connectedDevices);\n        });\n      }\n    };\n    fetchUserId();\n  }, []);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setDropdownVisible(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const handleOpenModal = device => {\n    setSelectedDevice(device);\n    setModalVisible(true);\n  };\n  const handleCloseModal = () => {\n    setModalVisible(false);\n  };\n  const handleBackdropClick = event => {\n    if (modalContentRef.current && !modalContentRef.current.contains(event.target)) {\n      handleCloseModal();\n    }\n  };\n  const toggleLed = async () => {\n    const newLedState = !ledState;\n    setLedState(newLedState);\n    const deviceRef = ref(getDatabase(), `usuarios/${userId}/devices/${selectedDevice.id}`);\n    update(deviceRef, {\n      SensorLed: newLedState\n    });\n  };\n  useEffect(() => {\n    if (selectedDevice) {\n      const ledRef = ref(getDatabase(), `usuarios/${userId}/devices/${selectedDevice.id}/SensorLed`);\n      onValue(ledRef, snapshot => {\n        setLedState(snapshot.val() || false);\n      });\n    }\n  }, [selectedDevice, userId]);\n  const toggleDropdown = () => {\n    setDropdownVisible(!dropdownVisible);\n  };\n  const handleChangePassword = () => {\n    setChangePasswordModalVisible(true);\n    setDropdownVisible(false);\n  };\n  const handleCloseChangePasswordModal = () => {\n    setChangePasswordModalVisible(false);\n    setNewPassword('');\n    setConfirmPassword('');\n    setPasswordError('');\n  };\n  const handleBackdropClickChangePassword = event => {\n    if (modalContentRef.current && !modalContentRef.current.contains(event.target)) {\n      handleCloseChangePasswordModal();\n    }\n  };\n  const handleSaveNewPassword = async () => {\n    if (newPassword !== confirmPassword) {\n      setPasswordError('Las contraseñas no coinciden');\n      return;\n    }\n    if (newPassword === '' || confirmPassword === '') {\n      setPasswordError('Las contraseñas no pueden estar vacías');\n      return;\n    }\n    const userRef = ref(getDatabase(), `usuarios/${userId}`);\n    await update(userRef, {\n      pass: newPassword\n    });\n    setChangePasswordModalVisible(false);\n    setNewPassword('');\n    setConfirmPassword('');\n    setPasswordError('');\n  };\n  const initializeDevicesToFalse = async () => {\n    if (userId) {\n      try {\n        const database = getDatabase();\n        const devicesRef = ref(database, `usuarios/${userId}/devices`);\n        const snapshot = await get(devicesRef);\n        const devicesData = snapshot.val();\n        const devicesList = devicesData ? Object.keys(devicesData).map(key => ({\n          id: key,\n          ...devicesData[key]\n        })) : [];\n        for (const device of devicesList) {\n          const deviceRef = ref(database, `usuarios/${userId}/devices/${device.id}`);\n          await update(deviceRef, {\n            connected: false\n          }).catch(error => console.log(\"Error updating device:\", error));\n        }\n        const updatedDevicesList = devicesList.filter(device => device.connected);\n        setDevices(updatedDevicesList);\n      } catch (error) {\n        console.log(\"Error initializing devices:\", error);\n      }\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('userId');\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green d-flex p-1 justify-content-between align-items-center shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require('../assets/Icons/icon.png'),\n        width: 70,\n        height: 70,\n        alt: \"logo_icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"me-4 position-relative\",\n        ref: dropdownRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-light\",\n          onClick: toggleDropdown,\n          style: {\n            cursor: 'pointer'\n          },\n          children: [userName, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-caret-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 100\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }, this), dropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu show\",\n          style: {\n            position: 'absolute',\n            right: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropdown-item border-0 btn btn-outline-success text-success fs-5\",\n            onClick: handleChangePassword,\n            children: [\"Cambiar Contrase\\xF1a \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-unlock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 146\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropdown-item border-0 btn btn-outline-success text-success fs-5\",\n            onClick: handleLogout,\n            children: [\"Cerrar sesi\\xF3n \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-box-arrow-in-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 133\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex px-1 justify-content-between align-items-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-green fw-bold fst-italic\",\n          children: \"Dispositivos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-4 fst-italic text-secondary\",\n          children: [\"Usuario: \", userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"text-green bg-success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success bg-green mb-3\",\n          onClick: initializeDevicesToFalse,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require('../assets/Icons/Synchronize.png'),\n            width: 20,\n            height: 20,\n            alt: \"sync\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-stretch\",\n        children: devices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 col-md-4 col-lg-3 mb-3\",\n          onClick: () => handleOpenModal(device),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card h-100 w-100 bg-green shadow card-hoverable \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between align-items-center rounded p-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: require('../assets/Icons/PottedPlant.png'),\n                width: 100,\n                height: 100,\n                alt: \"logo_pot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-light fs-5\",\n                children: device.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }, this)\n        }, device.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 3\n    }, this), selectedDevice && /*#__PURE__*/_jsxDEV(DeviceModal, {\n      selectedDevice: selectedDevice,\n      modalVisible: modalVisible,\n      handleCloseModal: handleCloseModal,\n      ledState: ledState,\n      toggleLed: toggleLed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }, this), changePasswordModalVisible && /*#__PURE__*/_jsxDEV(ChangePasswordModal, {\n      changePasswordModalVisible: changePasswordModalVisible,\n      handleCloseChangePasswordModal: handleCloseChangePasswordModal,\n      newPassword: newPassword,\n      confirmPassword: confirmPassword,\n      passwordError: passwordError,\n      setNewPassword: setNewPassword,\n      setConfirmPassword: setConfirmPassword,\n      handleSaveNewPassword: handleSaveNewPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(HomeScreen, \"lRVWxij5Xf1D65+gkTk8fO4qZl0=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ref","onValue","getDatabase","update","get","useNavigate","DeviceModal","ChangePasswordModal","jsxDEV","_jsxDEV","HomeScreen","_s","devices","setDevices","userName","setUserName","userId","setUserId","selectedDevice","setSelectedDevice","modalVisible","setModalVisible","ledState","setLedState","dropdownVisible","setDropdownVisible","changePasswordModalVisible","setChangePasswordModalVisible","newPassword","setNewPassword","confirmPassword","setConfirmPassword","passwordError","setPasswordError","modalContentRef","dropdownRef","navigate","fetchUserId","storedUserId","localStorage","getItem","database","userRef","devicesRef","snapshot","userData","val","name","devicesData","devicesList","Object","keys","map","key","id","connectedDevices","filter","device","connected","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleOpenModal","handleCloseModal","handleBackdropClick","toggleLed","newLedState","deviceRef","SensorLed","ledRef","toggleDropdown","handleChangePassword","handleCloseChangePasswordModal","handleBackdropClickChangePassword","handleSaveNewPassword","pass","initializeDevicesToFalse","catch","error","console","log","updatedDevicesList","handleLogout","removeItem","children","className","src","require","width","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","position","right","_c","$RefreshReg$"],"sources":["C:/Users/Equipo/Desktop/DI/react/pruebaesp32/React/src/screens/HomePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { ref, onValue, getDatabase, update, get } from 'firebase/database';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DeviceModal from './DeviceModal';\r\nimport ChangePasswordModal from './ChangePasswordModal';\r\n\r\nfunction HomeScreen() {\r\n  const [devices, setDevices] = useState([]);\r\n  const [userName, setUserName] = useState('');\r\n  const [userId, setUserId] = useState('');\r\n  const [selectedDevice, setSelectedDevice] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [ledState, setLedState] = useState(false);\r\n  const [dropdownVisible, setDropdownVisible] = useState(false);\r\n  const [changePasswordModalVisible, setChangePasswordModalVisible] = useState(false);\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const modalContentRef = useRef(null);\r\n  const dropdownRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUserId = async () => {\r\n      const storedUserId = localStorage.getItem('userId');\r\n      if (storedUserId) {\r\n        setUserId(storedUserId);\r\n        const database = getDatabase();\r\n        const userRef = ref(database, `usuarios/${storedUserId}`);\r\n        const devicesRef = ref(database, `usuarios/${storedUserId}/devices`);\r\n\r\n        onValue(userRef, (snapshot) => {\r\n          const userData = snapshot.val();\r\n          setUserName(userData ? userData.name : ''); \r\n        });\r\n\r\n        onValue(devicesRef, (snapshot) => {\r\n          const devicesData = snapshot.val();\r\n          const devicesList = devicesData ? Object.keys(devicesData).map(key => ({\r\n            id: key,\r\n            ...devicesData[key]\r\n          })) : [];\r\n          \r\n          // Filtra los dispositivos con connected: true\r\n          const connectedDevices = devicesList.filter(device => device.connected);\r\n          setDevices(connectedDevices);\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchUserId();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setDropdownVisible(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const handleOpenModal = (device) => {\r\n    setSelectedDevice(device);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleBackdropClick = (event) => {\r\n    if (modalContentRef.current && !modalContentRef.current.contains(event.target)) {\r\n      handleCloseModal();\r\n    }\r\n  };\r\n\r\n  const toggleLed = async () => {\r\n    const newLedState = !ledState;\r\n    setLedState(newLedState);\r\n    const deviceRef = ref(getDatabase(), `usuarios/${userId}/devices/${selectedDevice.id}`);\r\n    update(deviceRef, { SensorLed: newLedState });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedDevice) {\r\n      const ledRef = ref(getDatabase(), `usuarios/${userId}/devices/${selectedDevice.id}/SensorLed`);\r\n      onValue(ledRef, (snapshot) => {\r\n        setLedState(snapshot.val() || false);\r\n      });\r\n    }\r\n  }, [selectedDevice, userId]);\r\n\r\n  const toggleDropdown = () => {\r\n    setDropdownVisible(!dropdownVisible);\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    setChangePasswordModalVisible(true);\r\n    setDropdownVisible(false);\r\n  };\r\n\r\n  const handleCloseChangePasswordModal = () => {\r\n    setChangePasswordModalVisible(false);\r\n    setNewPassword('');\r\n    setConfirmPassword('');\r\n    setPasswordError('');\r\n  };\r\n\r\n  const handleBackdropClickChangePassword = (event) => {\r\n    if (modalContentRef.current && !modalContentRef.current.contains(event.target)) {\r\n      handleCloseChangePasswordModal();\r\n    }\r\n  };\r\n\r\n  const handleSaveNewPassword = async () => {\r\n    if (newPassword !== confirmPassword) {\r\n      setPasswordError('Las contraseñas no coinciden');\r\n      return;\r\n    }\r\n    if (newPassword === '' || confirmPassword === '') {\r\n      setPasswordError('Las contraseñas no pueden estar vacías');\r\n      return;\r\n    }\r\n\r\n    const userRef = ref(getDatabase(), `usuarios/${userId}`);\r\n    await update(userRef, { pass: newPassword });\r\n    setChangePasswordModalVisible(false);\r\n    setNewPassword('');\r\n    setConfirmPassword('');\r\n    setPasswordError('');\r\n  };\r\n\r\n  const initializeDevicesToFalse = async () => {\r\n    if (userId) {\r\n      try {\r\n        const database = getDatabase();\r\n        const devicesRef = ref(database, `usuarios/${userId}/devices`);\r\n        const snapshot = await get(devicesRef);\r\n        const devicesData = snapshot.val();\r\n        const devicesList = devicesData ? Object.keys(devicesData).map(key => ({\r\n          id: key,\r\n          ...devicesData[key]\r\n        })) : [];\r\n\r\n        for (const device of devicesList) {\r\n          const deviceRef = ref(database, `usuarios/${userId}/devices/${device.id}`);\r\n          await update(deviceRef, { connected: false })\r\n            .catch((error) => console.log(\"Error updating device:\", error));\r\n        }\r\n\r\n        const updatedDevicesList = devicesList.filter(device => device.connected);\r\n        setDevices(updatedDevicesList);\r\n      } catch (error) {\r\n        console.log(\"Error initializing devices:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('userId');\r\n    navigate('/');\r\n  };\r\n  return (\r\n    <div>\r\n  <div className='bg-green d-flex p-1 justify-content-between align-items-center shadow'>\r\n    <img src={require('../assets/Icons/icon.png')} width={70} height={70} alt=\"logo_icon\" />\r\n    <div className='me-4 position-relative' ref={dropdownRef}>\r\n      <h3 className='text-light' onClick={toggleDropdown} style={{ cursor: 'pointer' }}>{userName} <i className=\"bi bi-caret-down\"></i></h3>\r\n      {dropdownVisible && (\r\n        <div className='dropdown-menu show' style={{ position: 'absolute', right: 0 }}>\r\n          <button className='dropdown-item border-0 btn btn-outline-success text-success fs-5' onClick={handleChangePassword}>Cambiar Contraseña <i className=\"bi bi-unlock\"></i></button>\r\n          <button className='dropdown-item border-0 btn btn-outline-success text-success fs-5' onClick={handleLogout}>Cerrar sesión <i className=\"bi bi-box-arrow-in-right\"></i></button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </div>\r\n  <div className='container mt-2'>\r\n    <div className='d-flex px-1 justify-content-between align-items-end'>\r\n      <h1 className='text-green fw-bold fst-italic'>Dispositivos</h1>\r\n      <p className='fs-4 fst-italic text-secondary'>Usuario: {userId}</p>\r\n    </div>\r\n   \r\n    <hr className='text-green bg-success'/>\r\n    <div className='d-flex justify-content-end'>\r\n      <button className=\"btn btn-success bg-green mb-3\" onClick={initializeDevicesToFalse}>\r\n        <img src={require('../assets/Icons/Synchronize.png')} width={20} height={20} alt=\"sync\" />\r\n      </button>\r\n    </div>\r\n    \r\n\r\n    <div className='row align-items-stretch'>\r\n      {devices.map((device) => (\r\n        <div key={device.id} className='col-6 col-md-4 col-lg-3 mb-3' onClick={() => handleOpenModal(device)}>\r\n          <div className='card h-100 w-100 bg-green shadow card-hoverable '>\r\n            <div className='d-flex justify-content-between align-items-center rounded p-3'>\r\n              <img src={require('../assets/Icons/PottedPlant.png')} width={100} height={100} alt=\"logo_pot\" />\r\n              <div className='text-light fs-5'>{device.id}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n\r\n  {selectedDevice && (\r\n    <DeviceModal\r\n      selectedDevice={selectedDevice}\r\n      modalVisible={modalVisible}\r\n      handleCloseModal={handleCloseModal}\r\n      ledState={ledState}\r\n      toggleLed={toggleLed}\r\n    />\r\n  )}\r\n\r\n  {changePasswordModalVisible && (\r\n    <ChangePasswordModal\r\n      changePasswordModalVisible={changePasswordModalVisible}\r\n      handleCloseChangePasswordModal={handleCloseChangePasswordModal}\r\n      newPassword={newPassword}\r\n      confirmPassword={confirmPassword}\r\n      passwordError={passwordError}\r\n      setNewPassword={setNewPassword}\r\n      setConfirmPassword={setConfirmPassword}\r\n      handleSaveNewPassword={handleSaveNewPassword}\r\n    />\r\n  )}\r\n</div>\r\n\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}